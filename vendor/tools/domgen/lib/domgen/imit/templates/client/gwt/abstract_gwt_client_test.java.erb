/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.imit.qualified_abstract_gwt_client_test_name) %>;

@java.lang.SuppressWarnings( { "UnusedDeclaration" } )
@javax.annotation.Generated( "Domgen" )
public abstract class <%= repository.imit.abstract_gwt_client_test_name %>
  extends <%= repository.imit.qualified_client_test_name %>
{
<% repository.imit.gwt_test_factories.each do |short_code, classname| -%>
  @javax.annotation.Nonnull
  @edu.umd.cs.findbugs.annotations.SuppressFBWarnings( "NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR" )
  protected <%= classname %> <%= short_code %>;
<% end -%>

  @org.testng.annotations.BeforeMethod
  public void preTest()
    throws Exception
  {
    super.preTest();
<% repository.imit.gwt_test_factories.each do |short_code, classname| -%>
    <%= short_code %> = s( <%= classname %>.class );
<% end -%>
  }

  @java.lang.Override
  protected com.google.inject.Module[] getModules()
  {
    final java.util.ArrayList<com.google.inject.Module> modules = new java.util.ArrayList<>();
    java.util.Collections.addAll( modules, super.getModules() );
<% repository.imit.extra_test_modules.each do |test_module| %>
    addModule( modules, new <%= test_module %>() );
<% end -%>
    addModule( modules, new<%= repository.imit.mock_services_module_name %>() );
    addModule( modules, new<%= repository.gwt_rpc.mock_services_module_name %>() );
    addModule( modules, newReplicantGwtClientTestModule() );
    return modules.toArray( new com.google.inject.Module[ modules.size() ] );
  }

  @java.lang.SuppressWarnings( { "unchecked", "UnusedParameters" } )
  protected final <T> java.lang.Class<<%= repository.gwt.qualified_async_callback_name %><T>> asyncResultType( @javax.annotation.Nonnull final java.lang.Class<T> type )
  {
    return (Class) <%= repository.gwt.qualified_async_callback_name %>.class;
  }

  @javax.annotation.Nullable
  protected com.google.inject.Module newReplicantGwtClientTestModule()
  {
    return new org.realityforge.replicant.client.test.gwt.ReplicantGwtClientTestModule();
  }

  @javax.annotation.Nullable
  protected com.google.inject.Module new<%= repository.gwt_rpc.mock_services_module_name %>()
  {
    return new <%= repository.gwt_rpc.qualified_mock_services_module_name %>();
  }

  @javax.annotation.Nullable
  protected com.google.inject.Module new<%= repository.imit.mock_services_module_name %>()
  {
    return new <%= repository.imit.qualified_mock_services_module_name %>();
  }

  protected final <H> H addHandler( final com.google.web.bindery.event.shared.Event.Type<H> type, final H handler )
  {
    eventBus().addHandler( type, handler );
    return handler;
  }

  protected final void fireEvent( final com.google.web.bindery.event.shared.Event<?> event )
  {
    eventBus().fireEvent( event );
  }

  protected final com.google.gwt.event.shared.EventBus eventBus()
  {
    return s( com.google.gwt.event.shared.EventBus.class );
  }

  protected final <T extends com.google.web.bindery.event.shared.Event<?>> T event( final T value )
  {
    return org.mockito.Matchers.refEq( value, "source" );
  }
}
